3rd ► Delete DB pod ► Observe what happens both in frontEnd & in Unix"
Observation--->
1-old DB pod get terminated and at a same time new DB pod get created.
2-result pod and Worker pod get restarted.
3-result pod and Worker pod restablished shocket connection with new DB pod
4-all old log of DB pod get deleted
5-All the previous data store on DB get deleted and Result output show 0%

Activity Logs--->>

[root@ip-172-31-32-161 k8s-specifications]# kubectl logs db-b54cd94f4-nxlrn
The files belonging to this database system will be owned by user "postgres".
This user must also own the server process.

The database cluster will be initialized with locale "en_US.utf8".
The default database encoding has accordingly been set to "UTF8".
The default text search configuration will be set to "english".

Data page checksums are disabled.

fixing permissions on existing directory /var/lib/postgresql/data ... ok
creating subdirectories ... ok
selecting default max_connections ... 100
selecting default shared_buffers ... 128MB
creating configuration files ... ok
creating template1 database in /var/lib/postgresql/data/base/1 ... ok
initializing pg_authid ... ok
setting password ... ok
initializing dependencies ... ok
creating system views ... ok
loading system objects' descriptions ... ok
creating collations ... ok
creating conversions ... ok
creating dictionaries ... ok
setting privileges on built-in objects ... ok
creating information schema ... ok
loading PL/pgSQL server-side language ... ok
vacuuming database template1 ... ok
copying template1 to template0 ... ok
copying template1 to postgres ... ok
syncing data to disk ... ok

WARNING: enabling "trust" authentication for local connections
You can change this by editing pg_hba.conf or using the option -A, or
--auth-local and --auth-host, the next time you run initdb.

Success. You can now start the database server using:

    postgres -D /var/lib/postgresql/data
or
    pg_ctl -D /var/lib/postgresql/data -l logfile start

****************************************************
WARNING: No password has been set for the database.
         This will allow anyone with access to the
         Postgres port to access your database. In
         Docker's default configuration, this is
         effectively any other container on the same
         system.

         Use "-e POSTGRES_PASSWORD=password" to set
         it in "docker run".
****************************************************
waiting for server to start....LOG:  database system was shut down at 2023-07-18 15:36:52 UTC
LOG:  MultiXact member wraparound protections are now enabled
LOG:  database system is ready to accept connections
LOG:  autovacuum launcher started
 done
server started

/usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*

LOG:  received fast shutdown request
LOG:  aborting any active transactions
LOG:  autovacuum launcher shutting down
LOG:  shutting down
waiting for server to shut down....LOG:  database system is shut down
 done
server stopped

PostgreSQL init process complete; ready for start up.

LOG:  database system was shut down at 2023-07-18 15:36:53 UTC
LOG:  MultiXact member wraparound protections are now enabled
LOG:  database system is ready to accept connections
LOG:  autovacuum launcher started
ERROR:  relation "votes" does not exist at character 38
STATEMENT:  SELECT vote, COUNT(id) AS count FROM votes GROUP BY vote
ERROR:  duplicate key value violates unique constraint "votes_id_key"
DETAIL:  Key (id)=(6c46c57b816432) already exists.
STATEMENT:  INSERT INTO votes (id, vote) VALUES ($1, $2)
ERROR:  duplicate key value violates unique constraint "votes_id_key"
DETAIL:  Key (id)=(6c46c57b816432) already exists.
STATEMENT:  INSERT INTO votes (id, vote) VALUES ($1, $2)
ERROR:  duplicate key value violates unique constraint "votes_id_key"
DETAIL:  Key (id)=(6c46c57b816432) already exists.
STATEMENT:  INSERT INTO votes (id, vote) VALUES ($1, $2)
ERROR:  duplicate key value violates unique constraint "votes_id_key"
DETAIL:  Key (id)=(768afcf6ba771a1) already exists.
STATEMENT:  INSERT INTO votes (id, vote) VALUES ($1, $2)
[root@ip-172-31-32-161 k8s-specifications]# 

[root@ip-172-31-32-161 k8s-specifications]# kubectl logs worker-dd46d7584-vhxq2
Connected to db
Found redis at 10.101.98.88
Connecting to redis
Processing vote for 'b' by '6c46c57b816432'
Processing vote for 'a' by '6c46c57b816432'
Processing vote for 'a' by '768afcf6ba771a1'
[root@ip-172-31-32-161 k8s-specifications]# 

[root@ip-172-31-32-161 k8s-specifications]# kubectl logs redis-868d64d78-6sc8w
1:C 18 Jul 2023 15:36:48.259 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
1:C 18 Jul 2023 15:36:48.259 # Redis version=7.0.12, bits=64, commit=00000000, modified=0, pid=1, just started
1:C 18 Jul 2023 15:36:48.259 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf
1:M 18 Jul 2023 15:36:48.262 * monotonic clock: POSIX clock_gettime
1:M 18 Jul 2023 15:36:48.263 * Running mode=standalone, port=6379.
1:M 18 Jul 2023 15:36:48.263 # Server initialized
1:M 18 Jul 2023 15:36:48.263 # WARNING Your system is configured to use the 'xen' clocksource which might lead to degraded performance. Check the result of the [slow-clocksource] system check: run 'redis-server --check-system' to check if the system's clocksource isn't degrading performance.
1:M 18 Jul 2023 15:36:48.263 * Ready to accept connections
1:M 18 Jul 2023 16:36:49.099 * 1 changes in 3600 seconds. Saving...
1:M 18 Jul 2023 16:36:49.099 * Background saving started by pid 15
15:C 18 Jul 2023 16:36:49.102 * DB saved on disk
15:C 18 Jul 2023 16:36:49.102 * Fork CoW for RDB: current 0 MB, peak 0 MB, average 0 MB
1:M 18 Jul 2023 16:36:49.199 * Background saving terminated with success
[root@ip-172-31-32-161 k8s-specifications]# 
[root@ip-172-31-32-161 k8s-specifications]# 
****************************************************************************************************************
****************************************************************************************************************
[root@ip-172-31-32-161 k8s-specifications]# kubectl delete po db-b54cd94f4-nxlrn
pod "db-b54cd94f4-nxlrn" deleted
^C
[root@ip-172-31-32-161 k8s-specifications]# kubectl get po
NAME                      READY   STATUS        RESTARTS   AGE
db-b54cd94f4-nxlrn        1/1     Terminating   0          61m
db-b54cd94f4-pqpvt        1/1     Running       0          5s
redis-868d64d78-6sc8w     1/1     Running       0          61m
result-5d57b59f4b-tqkxt   1/1     Running       0          61m
vote-94849dc97-5mnms      1/1     Running       0          57m
worker-dd46d7584-vhxq2    1/1     Running       0          16m
[root@ip-172-31-32-161 k8s-specifications]# 

[root@ip-172-31-32-161 k8s-specifications]# kubectl get po
NAME                      READY   STATUS    RESTARTS   AGE
db-b54cd94f4-pqpvt        1/1     Running   0          3m26s
redis-868d64d78-6sc8w     1/1     Running   0          64m
result-5d57b59f4b-tqkxt   1/1     Running   1          64m
vote-94849dc97-5mnms      1/1     Running   0          60m
worker-dd46d7584-vhxq2    1/1     Running   1          20m
[root@ip-172-31-32-161 k8s-specifications]# 
[root@ip-172-31-32-161 k8s-specifications]# 

[root@ip-172-31-32-161 k8s-specifications]# kubectl logs db-b54cd94f4-pqpvt
The files belonging to this database system will be owned by user "postgres".
This user must also own the server process.

The database cluster will be initialized with locale "en_US.utf8".
The default database encoding has accordingly been set to "UTF8".
The default text search configuration will be set to "english".

Data page checksums are disabled.

fixing permissions on existing directory /var/lib/postgresql/data ... ok
creating subdirectories ... ok
selecting default max_connections ... 100
selecting default shared_buffers ... 128MB
creating configuration files ... ok
creating template1 database in /var/lib/postgresql/data/base/1 ... ok
initializing pg_authid ... ok
setting password ... ok
initializing dependencies ... ok
creating system views ... ok
loading system objects' descriptions ... ok
creating collations ... ok
creating conversions ... ok
creating dictionaries ... ok
setting privileges on built-in objects ... ok
creating information schema ... ok
loading PL/pgSQL server-side language ... ok
vacuuming database template1 ... ok
copying template1 to template0 ... ok
copying template1 to postgres ... ok
syncing data to disk ... ok

WARNING: enabling "trust" authentication for local connections
You can change this by editing pg_hba.conf or using the option -A, or
--auth-local and --auth-host, the next time you run initdb.

Success. You can now start the database server using:

    postgres -D /var/lib/postgresql/data
or
    pg_ctl -D /var/lib/postgresql/data -l logfile start

****************************************************
WARNING: No password has been set for the database.
         This will allow anyone with access to the
         Postgres port to access your database. In
         Docker's default configuration, this is
         effectively any other container on the same
         system.

         Use "-e POSTGRES_PASSWORD=password" to set
         it in "docker run".
****************************************************
waiting for server to start....LOG:  database system was shut down at 2023-07-18 16:38:15 UTC
LOG:  MultiXact member wraparound protections are now enabled
LOG:  database system is ready to accept connections
LOG:  autovacuum launcher started
 done
server started

/usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*

LOG:  received fast shutdown request
LOG:  aborting any active transactions
LOG:  autovacuum launcher shutting down
LOG:  shutting down
waiting for server to shut down....LOG:  database system is shut down
 done
server stopped

PostgreSQL init process complete; ready for start up.

LOG:  database system was shut down at 2023-07-18 16:38:16 UTC
LOG:  MultiXact member wraparound protections are now enabled
LOG:  database system is ready to accept connections
LOG:  autovacuum launcher started
ERROR:  relation "votes" does not exist at character 38
STATEMENT:  SELECT vote, COUNT(id) AS count FROM votes GROUP BY vote
ERROR:  relation "votes" does not exist at character 38
STATEMENT:  SELECT vote, COUNT(id) AS count FROM votes GROUP BY vote
ERROR:  relation "votes" does not exist at character 38
STATEMENT:  SELECT vote, COUNT(id) AS count FROM votes GROUP BY vote
[root@ip-172-31-32-161 k8s-specifications]#


[root@ip-172-31-32-161 k8s-specifications]# kubectl logs worker-dd46d7584-vhxq2
Connected to db
Found redis at 10.101.98.88
Connecting to redis
[root@ip-172-31-32-161 k8s-specifications]#

[root@ip-172-31-32-161 k8s-specifications]# kubectl logs result-5d57b59f4b-tqkxt
Tue, 18 Jul 2023 16:38:43 GMT body-parser deprecated bodyParser: use individual json/urlencoded middlewares at server.js:73:9
Tue, 18 Jul 2023 16:38:43 GMT body-parser deprecated undefined extended: provide extended option at ../node_modules/body-parser/index.js:104:29
App running on port 80
Connected to db
Error performing query: error: relation "votes" does not exist
Error performing query: error: relation "votes" does not exist
Error performing query: error: relation "votes" does not exist
[root@ip-172-31-32-161 k8s-specifications]# 
[root@ip-172-31-32-161 k8s-specifications]# 
